# Generated by Django 5.1.2 on 2024-10-20 16:53

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import employee_tasks.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Employee",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Введите адрес электронной почты",
                        max_length=254,
                        null=True,
                        unique=True,
                        verbose_name="Почта",
                    ),
                ),
                ("first_name", models.CharField(help_text="Введите имя", max_length=150, verbose_name="Имя")),
                ("last_name", models.CharField(help_text="Введите фамилию", max_length=150, verbose_name="Фамилия")),
                (
                    "position",
                    models.CharField(help_text="Введите должность", max_length=150, verbose_name="Должность"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Сотрудник",
                "verbose_name_plural": "Сотрудники",
                "ordering": ["last_name"],
            },
            managers=[
                ("objects", employee_tasks.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "title_task",
                    models.CharField(
                        help_text="Введите название задачи", max_length=150, verbose_name="Название задачи"
                    ),
                ),
                (
                    "task_description",
                    models.TextField(help_text="Введите описание задачи", verbose_name="Описание задачи"),
                ),
                (
                    "deadline",
                    models.DateTimeField(
                        blank=True,
                        help_text="Введите срок выполнения задачи",
                        null=True,
                        verbose_name="Срок выполнения задачи",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "в ожидании"),
                            ("in_progress", "в процессе"),
                            ("completed", "выполнена"),
                            ("canceled", "отменена"),
                        ],
                        default="pending",
                        help_text="Выберите статус задачи",
                        max_length=20,
                        verbose_name="Статус задачи",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Дата создания задачи", verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Дата обновления задачи", verbose_name="Дата обновления"
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        help_text="Выберите сотрудника ответственного за задачу",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Сотрудник",
                    ),
                ),
                (
                    "parent_task",
                    models.ForeignKey(
                        blank=True,
                        help_text="Выберите родительскую задачу",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="employee_tasks.task",
                        verbose_name="Родительская задача",
                    ),
                ),
            ],
            options={
                "verbose_name": "Задача",
                "verbose_name_plural": "Задачи",
                "ordering": ["employee", "title_task", "status"],
            },
        ),
    ]
